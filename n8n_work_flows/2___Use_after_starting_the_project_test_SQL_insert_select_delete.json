{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        80,
        440
      ],
      "id": "7c727235-88f9-4a2c-aba2-37417a62e8a1",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "content": "# You must run this flow:\nThis workflow ensures **consistency with the requirements** of the project and **testing** of the database.\n\n\nRun this workflow to TEST the tables of the database **after starting the project**\n\n## What this flow does:\n1. Checks if **data exists**\n2. if it **does** then the data is SELECTED\n2. otherwise data is **INSERTED, SELECTED, partialy DELETED then fully deleted (TRUNCATED)**\n\n\n*Tip: run each node one by one and use DBeaver to see if data is actually appearing and disapearing from the DB*",
        "height": 860,
        "width": 1720,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "c174b66b-82e5-4592-bb28-065178faf1fb",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "/* -----------------------------------------------------------------\n   Seed test data (clients, contracts,\n   energy_readings).  All statements run inside a single transaction\n   so they either all succeed or all roll back.\n------------------------------------------------------------------*/\nBEGIN;\n\n/* === 1. clients  ============================================== */\nINSERT INTO clients (id, name) VALUES\n    (1, 'Client A'),\n    (2, 'Client B'),\n    (3, 'Client C');\n\n/* === 2. contracts  ============================================ */\n/* each contract belongs to one client                            */\nINSERT INTO contracts (id, client_id, is_active, created_at) VALUES\n    (1, 1, TRUE, '2025-06-10'),\n    (2, 2, TRUE, '2025-06-11'),\n    (3, 3, TRUE, '2025-06-12'),\n    (4, 1, TRUE, '2025-06-13');   -- extra contract for Client A\n\n/* === 3. energy_readings  ====================================== */\n/* each reading belongs to one contract                           */\nINSERT INTO energy_readings (id, contract_id, reading_amount_kwh, created_at) VALUES\n    (1, 1,  100.00, '2025-06-10'),\n    (2, 2,  300.00, '2025-06-11'),\n    (3, 3, 2000.00, '2025-06-12'),\n    (4, 4, 2200.00, '2025-06-13');\n\nCOMMIT;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        860,
        640
      ],
      "id": "24ee857d-8a71-4da1-bfbe-ff12f796f494",
      "name": "Inserts data",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "/* 1) Single flattened view: client → contract → reading */\nSELECT\n    cl.id   AS client_id,\n    cl.name AS client_name,\n\n    ct.id         AS contract_id,\n    ct.is_active,\n    ct.created_at AS contract_created_at,\n\n    er.id                 AS reading_id,\n    er.reading_amount_kwh AS reading_kwh,\n    er.created_at         AS reading_at\nFROM clients          cl\nJOIN contracts        ct ON ct.client_id   = cl.id\nJOIN energy_readings  er ON er.contract_id = ct.id\nORDER BY cl.id, ct.id, er.created_at;\n\n/* 2) Total kWh consumed per client */\nSELECT\n    cl.id,\n    cl.name,\n    SUM(er.reading_amount_kwh) AS total_kwh\nFROM clients          cl\nJOIN contracts        ct ON ct.client_id   = cl.id\nJOIN energy_readings  er ON er.contract_id = ct.id\nGROUP BY cl.id, cl.name\nORDER BY cl.id;\n\n/* 3) Quick lookup: every reading for a specific contract */\nSELECT *\nFROM energy_readings\nWHERE contract_id = 1          -- ← replace with the contract you need\nORDER BY created_at DESC;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1100,
        640
      ],
      "id": "1be08459-6a60-492a-b5a9-a0ef6c7a16e1",
      "name": "Pulls data from DB",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "/* n8n Postgres → Execute Query node\n   Deletes **only** the data that belongs to Client 1,\n   following the correct order: readings → contracts → client. */\nBEGIN;\n\n/* 1. Remove every energy reading linked to any contract of Client 1 */\nDELETE FROM energy_readings\nWHERE contract_id IN (\n    SELECT id\n    FROM contracts\n    WHERE client_id = 1\n);\n\n/* 2. Remove all contracts that belong to Client 1 */\nDELETE FROM contracts\nWHERE client_id = 1;\n\n/* 3. Finally, remove Client 1 itself */\nDELETE FROM clients\nWHERE id = 1;\n\nCOMMIT;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1320,
        640
      ],
      "id": "7356b1d8-29b6-48af-8fce-04f8817e3ffb",
      "name": "Deletes all data from client 1 in order",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "BEGIN;\n\n-- Remove ALL rows from the three tables in one shot\nTRUNCATE TABLE\n    energy_readings,\n    contracts,\n    clients\nRESTART IDENTITY      -- reset the sequences/serials\nCASCADE;              -- automatically empties child tables first\n\nCOMMIT;\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1520,
        640
      ],
      "id": "e27bb5f5-efe2-4cdd-b7e3-f7b6997d4299",
      "name": "Deletes ALL test data",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clients",
          "mode": "list",
          "cachedResultName": "clients"
        },
        "limit": 1,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        300,
        440
      ],
      "id": "c501a9b3-a48f-4095-804c-52f477ea1d74",
      "name": "select last client",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8f9a893a-9b2e-4868-a864-4ce2774c2da4",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        520,
        440
      ],
      "id": "e4f43196-5203-476d-a721-d0ed60f01311",
      "name": "Client exists?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "contracts",
          "mode": "list",
          "cachedResultName": "contracts"
        },
        "limit": 100,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1140,
        220
      ],
      "id": "f6025623-6f5c-4ca8-a640-f793c80b1ae0",
      "name": "select table contracts",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "clients",
          "mode": "list",
          "cachedResultName": "clients"
        },
        "limit": 100,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1140,
        60
      ],
      "id": "6a77220d-881c-4a75-afa2-76f1cbdbd393",
      "name": "select table clients",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "energy_readings",
          "mode": "list",
          "cachedResultName": "energy_readings"
        },
        "limit": 100,
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1140,
        380
      ],
      "id": "2ece29bb-1208-474a-99f4-313670c8e76f",
      "name": "select table energy_readings",
      "credentials": {
        "postgres": {
          "id": "DGUvcrL4tsCBKOfr",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "select last client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inserts data": {
      "main": [
        [
          {
            "node": "Pulls data from DB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pulls data from DB": {
      "main": [
        [
          {
            "node": "Deletes all data from client 1 in order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deletes all data from client 1 in order": {
      "main": [
        [
          {
            "node": "Deletes ALL test data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "select last client": {
      "main": [
        [
          {
            "node": "Client exists?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Client exists?": {
      "main": [
        [
          {
            "node": "select table clients",
            "type": "main",
            "index": 0
          },
          {
            "node": "select table contracts",
            "type": "main",
            "index": 0
          },
          {
            "node": "select table energy_readings",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Inserts data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "babb436e-9e49-472c-b2c9-6be7c068a469",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1f943a69a65f2bb2d863bb9aee21e503ca07cac986df6f24c8447c9dcc523e8f"
  },
  "id": "nqyX6jHQZq2h73Un",
  "tags": []
}